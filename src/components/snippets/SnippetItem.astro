---
import { Code } from 'astro:components';
import type { BuiltinLanguage } from 'shikiji';

interface Props {
	name: string;
	lang: BuiltinLanguage;
	content: string;
	selected?: boolean;
}

const { name, lang, content, selected = false } = Astro.props;
---

<snippet-item {name} {lang} {content} {selected}>
	<button class="w-full px-4 p-2 text-left hover:bg-sky-900/50">{name}</button>
	<template data-name="code-template">
		<div class="w-fit">
			<Code {lang} code={content} theme="rose-pine" />
		</div>
	</template>
</snippet-item>

<script>
	class SnippetItem extends HTMLElement {
		codeTemplate: HTMLTemplateElement | null = null;
		button: HTMLButtonElement | null = null;

		connectedCallback() {
			this.codeTemplate = this.querySelector<HTMLTemplateElement>(
				'template[data-name="code-template"]'
			)!;
			this.button = this.querySelector('button')!;

			this.querySelector('button')?.addEventListener('click', () => {
				this.dispatchEvent(
					new CustomEvent('snippetclick', {
						detail: {
							node: this.codeTemplate!.content.cloneNode(true),
						},
						bubbles: true,
					})
				);
			});
		}

		static get observedAttributes() {
			return ['selected'];
		}

		attributeChangedCallback(name: string, _: string, newValue: string) {
			if (name === 'selected') {
				if (newValue !== null) {
					this.button?.classList.add('bg-sky-950/50');
				} else {
					this.button?.classList.remove('bg-sky-950/50');
				}
			}
		}
	}

	customElements.define('snippet-item', SnippetItem);
</script>
